#' @importFrom magrittr %>%
#' @export
io_calculator <- function(base_catch, imports, multipliers = multipliers, deflator = 0.8734298, imports_states = imports_states) {
############
# Cleaning #
############
imports = imports_states %>%
dplyr::left_join(imports) %>%
dplyr::mutate(imports = imports*value) %>%
dplyr::select(fips, `Economic Category` = name, base_catch = imports) %>%
dplyr::mutate(`Species Category` = "Imports")
multipliers_harvesters = multipliers %>% dplyr::filter(`Economic Category` == "Harvesters")
multipliers_processors = multipliers %>% dplyr::filter(`Economic Category` == "Processors")
multipliers_wholesalers = multipliers %>% dplyr::filter(`Economic Category` == "Wholesalers")
multipliers_grocers = multipliers %>% dplyr::filter(`Economic Category` == "Grocers")
multipliers_restaurants = multipliers %>% dplyr::filter(`Economic Category` == "Restaurants")
##############
# Harvesters #
##############
multipliers_harvesters = multipliers_harvesters %>%
dplyr::mutate(Species.Category = `Species Category`) %>%
dplyr::left_join(base_catch, by = c("spec_no", "fips")) %>%
dplyr::mutate(
PI_Direct_Impact = `Personal Income Direct Impacts` * base_catch,
PI_Indirect_Impact = `Personal Income Indirect Impacts` * `RPC RPC` *
base_catch,
PI_Induced_Impact = `Personal Income Induced Impacts` * `RPC RPC` *
base_catch,
PI_Total = PI_Direct_Impact + PI_Indirect_Impact + PI_Induced_Impact,
TV_Direct_Impact = `Total Value Direct Impacts` * base_catch,
TV_Indirect_Impact = `Total Value Indirect Impacts` * `RPC RPC` *
base_catch,
TV_Induced_Impact = `Total Value Induced Impacts` * `RPC RPC` *
base_catch,
TV_Total = TV_Direct_Impact + TV_Indirect_Impact + TV_Induced_Impact,
O_Direct_Impact = `Output Direct Impacts` * base_catch,
O_Indirect_Impact = `Output Indirect Impacts` * `RPC RPC` * base_catch,
O_Induced_Impact = `Output Induced Impacts` * `RPC RPC` * base_catch,
O_Total = O_Direct_Impact + O_Indirect_Impact + O_Induced_Impact,
E_Direct_Impact = `Employment Direct Impacts` * base_catch * deflator,
E_Indirect_Impact = `Employment Indirect Impacts` * `RPC RPC` *
base_catch * deflator,
E_Induced_Impact = `Employment Induced Impacts` * `RPC RPC` * base_catch * deflator,
E_Total = E_Direct_Impact + E_Indirect_Impact + E_Induced_Impact
)
harvesters_output = multipliers_harvesters %>% dplyr::select(
fips,
`Economic Category`,
`Species Category`,
spec_no,
PI_Direct_Impact,
PI_Indirect_Impact,
PI_Induced_Impact,
PI_Total,
TV_Direct_Impact,
TV_Indirect_Impact,
TV_Induced_Impact,
TV_Total,
O_Direct_Impact,
O_Indirect_Impact,
O_Induced_Impact,
O_Total,
E_Direct_Impact,
E_Indirect_Impact,
E_Induced_Impact,
E_Total
)
##############
# Processors #
##############
multipliers_processors = multipliers_processors %>%
dplyr::mutate(Species.Category = `Species Category`) %>%
dplyr::left_join(base_catch, by = c("spec_no", "fips")) %>%
dplyr::mutate(processor_inputs = base_catch * Harvesters)
if (imports != F) {
for (n in unique(multipliers_processors$fips)) {
multipliers_processors$processor_inputs[multipliers_processors$`Species Category` == "Imports"] <-
imports$base_catch[imports$fips == n &
imports$`Economic Category` == "Processors"]
}
}
multipliers_processors = multipliers_processors %>%
dplyr::mutate(processor_markup = processor_inputs * markup) %>%
dplyr::mutate(
PI_Direct_Impact = `Personal Income Direct Impacts` * processor_markup,
PI_Indirect_Impact = `Personal Income Indirect Impacts` * `RPC RPC` *
processor_markup,
PI_Induced_Impact = `Personal Income Induced Impacts` * `RPC RPC` *
processor_markup,
PI_Total = PI_Direct_Impact + PI_Indirect_Impact + PI_Induced_Impact,
TV_Direct_Impact = `Total Value Direct Impacts` * processor_markup,
TV_Indirect_Impact = `Total Value Indirect Impacts` * `RPC RPC` *
processor_markup,
TV_Induced_Impact = `Total Value Induced Impacts` * `RPC RPC` *
processor_markup,
TV_Total = TV_Direct_Impact + TV_Indirect_Impact + TV_Induced_Impact,
O_Direct_Impact = `Output Direct Impacts` * processor_markup,
O_Indirect_Impact = `Output Indirect Impacts` * `RPC RPC` * processor_markup,
O_Induced_Impact = `Output Induced Impacts` * `RPC RPC` * processor_markup,
O_Total = O_Direct_Impact + O_Indirect_Impact + O_Induced_Impact,
E_Direct_Impact = `Employment Direct Impacts` * processor_markup * deflator,
E_Indirect_Impact = `Employment Indirect Impacts` * `RPC RPC` *
processor_markup * deflator,
E_Induced_Impact = `Employment Induced Impacts` * `RPC RPC` * processor_markup * deflator,
E_Total = E_Direct_Impact + E_Indirect_Impact + E_Induced_Impact
)
processors_output = multipliers_processors %>% dplyr::select(
fips,
`Economic Category`,
`Species Category`,
spec_no,
PI_Direct_Impact,
PI_Indirect_Impact,
PI_Induced_Impact,
PI_Total,
TV_Direct_Impact,
TV_Indirect_Impact,
TV_Induced_Impact,
TV_Total,
O_Direct_Impact,
O_Indirect_Impact,
O_Induced_Impact,
O_Total,
E_Direct_Impact,
E_Indirect_Impact,
E_Induced_Impact,
E_Total
)
processor_inputs = multipliers_processors %>% dplyr::select(fips, spec_no, processor_inputs, processor_markup)
###############
# Wholesalers #
###############
multipliers_wholesalers = multipliers_wholesalers %>%
dplyr::mutate(Species.Category = `Species Category`) %>%
dplyr::left_join(base_catch, by = c("spec_no", "fips")) %>%
dplyr::left_join(processor_inputs, by = c("spec_no", "fips")) %>%
dplyr::mutate(wholesaler_inputs = base_catch * Harvesters + Processors * (processor_inputs +
processor_markup))
if(imports != F) {
for (n in unique(multipliers_wholesalers$fips)) {
multipliers_wholesalers$wholesaler_inputs[multipliers_wholesalers$`Species Category` == "Imports"] <-
imports$base_catch[imports$fips == n &
imports$`Economic Category` == "Wholesalers"]
}
}
multipliers_wholesalers = multipliers_wholesalers %>%
dplyr::mutate(wholesaler_markup = wholesaler_inputs * markup) %>%
dplyr::mutate(
PI_Direct_Impact = `Personal Income Direct Impacts` * wholesaler_markup,
PI_Indirect_Impact = `Personal Income Indirect Impacts` * `RPC RPC` *
wholesaler_markup,
PI_Induced_Impact = `Personal Income Induced Impacts` * `RPC RPC` *
wholesaler_markup,
PI_Total = PI_Direct_Impact + PI_Indirect_Impact + PI_Induced_Impact,
TV_Direct_Impact = `Total Value Direct Impacts` * wholesaler_markup,
TV_Indirect_Impact = `Total Value Indirect Impacts` * `RPC RPC` *
wholesaler_markup,
TV_Induced_Impact = `Total Value Induced Impacts` * `RPC RPC` *
wholesaler_markup,
TV_Total = TV_Direct_Impact + TV_Indirect_Impact + TV_Induced_Impact,
O_Direct_Impact = `Output Direct Impacts` * wholesaler_markup,
O_Indirect_Impact = `Output Indirect Impacts` * `RPC RPC` * wholesaler_markup,
O_Induced_Impact = `Output Induced Impacts` * `RPC RPC` * wholesaler_markup,
O_Total = O_Direct_Impact + O_Indirect_Impact + O_Induced_Impact,
E_Direct_Impact = `Employment Direct Impacts` * wholesaler_markup * deflator,
E_Indirect_Impact = `Employment Indirect Impacts` * `RPC RPC` *
wholesaler_markup * deflator,
E_Induced_Impact = `Employment Induced Impacts` * `RPC RPC` * wholesaler_markup * deflator,
E_Total = E_Direct_Impact + E_Indirect_Impact + E_Induced_Impact
)
wholesalers_output = multipliers_wholesalers %>% dplyr::select(
fips,
`Economic Category`,
`Species Category`,
spec_no,
PI_Direct_Impact,
PI_Indirect_Impact,
PI_Induced_Impact,
PI_Total,
TV_Direct_Impact,
TV_Indirect_Impact,
TV_Induced_Impact,
TV_Total,
O_Direct_Impact,
O_Indirect_Impact,
O_Induced_Impact,
O_Total,
E_Direct_Impact,
E_Indirect_Impact,
E_Induced_Impact,
E_Total
)
wholesaler_inputs = multipliers_wholesalers %>% dplyr::select(fips,
spec_no,
wholesaler_inputs,
wholesaler_markup)
###########
# Grocers #
###########
multipliers_grocers = multipliers_grocers %>%
dplyr::mutate(Species.Category = `Species Category`) %>%
dplyr::left_join(base_catch, by = c("spec_no", "fips")) %>%
dplyr::left_join(processor_inputs, by = c("spec_no", "fips")) %>%
dplyr::left_join(wholesaler_inputs, by = c("spec_no", "fips")) %>%
dplyr::mutate(
grocer_inputs = base_catch * Harvesters + Processors * (processor_inputs +
processor_markup) + Wholesalers * (wholesaler_inputs + wholesaler_markup)
)
if (imports != F) {
for (n in unique(multipliers_grocers$fips)) {
multipliers_grocers$grocer_inputs[multipliers_grocers$`Species Category` == "Imports"] <-
imports$base_catch[imports$fips == n &
imports$`Economic Category` == "Grocers"]
}
}
multipliers_grocers = multipliers_grocers %>%
dplyr::mutate(grocer_markup = grocer_inputs * markup) %>%
dplyr::mutate(
PI_Direct_Impact = `Personal Income Direct Impacts` * grocer_markup,
PI_Indirect_Impact = `Personal Income Indirect Impacts` * `RPC RPC` *
grocer_markup,
PI_Induced_Impact = `Personal Income Induced Impacts` * `RPC RPC` *
grocer_markup,
PI_Total = PI_Direct_Impact + PI_Indirect_Impact + PI_Induced_Impact,
TV_Direct_Impact = `Total Value Direct Impacts` * grocer_markup,
TV_Indirect_Impact = `Total Value Indirect Impacts` * `RPC RPC` *
grocer_markup,
TV_Induced_Impact = `Total Value Induced Impacts` * `RPC RPC` *
grocer_markup,
TV_Total = TV_Direct_Impact + TV_Indirect_Impact + TV_Induced_Impact,
O_Direct_Impact = `Output Direct Impacts` * grocer_markup,
O_Indirect_Impact = `Output Indirect Impacts` * `RPC RPC` * grocer_markup,
O_Induced_Impact = `Output Induced Impacts` * `RPC RPC` * grocer_markup,
O_Total = O_Direct_Impact + O_Indirect_Impact + O_Induced_Impact,
E_Direct_Impact = `Employment Direct Impacts` * grocer_markup * deflator,
E_Indirect_Impact = `Employment Indirect Impacts` * `RPC RPC` *
grocer_markup * deflator,
E_Induced_Impact = `Employment Induced Impacts` * `RPC RPC` * grocer_markup * deflator,
E_Total = E_Direct_Impact + E_Indirect_Impact + E_Induced_Impact
)
grocers_output = multipliers_grocers %>% dplyr::select(
fips,
`Economic Category`,
`Species Category`,
spec_no,
PI_Direct_Impact,
PI_Indirect_Impact,
PI_Induced_Impact,
PI_Total,
TV_Direct_Impact,
TV_Indirect_Impact,
TV_Induced_Impact,
TV_Total,
O_Direct_Impact,
O_Indirect_Impact,
O_Induced_Impact,
O_Total,
E_Direct_Impact,
E_Indirect_Impact,
E_Induced_Impact,
E_Total
)
grocer_inputs = multipliers_grocers %>% dplyr::select(fips, spec_no, grocer_inputs, grocer_markup)
###############
# Restaurants #
###############
multipliers_restaurants = multipliers_restaurants %>%
dplyr::mutate(Species.Category = `Species Category`) %>%
dplyr::left_join(base_catch, by = c("spec_no", "fips")) %>%
dplyr::left_join(processor_inputs, by = c("spec_no", "fips")) %>%
dplyr::left_join(wholesaler_inputs, by = c("spec_no", "fips")) %>%
dplyr::left_join(grocer_inputs, by = c("spec_no", "fips")) %>%
dplyr::mutate(
restaurant_inputs = base_catch * Harvesters + Processors * (processor_inputs +
processor_markup) + Wholesalers * (wholesaler_inputs + wholesaler_markup) + Grocers *
(grocer_inputs + grocer_markup)
)
if(imports != F) {
for (n in unique(multipliers_restaurants$fips)) {
multipliers_restaurants$restaurants_inputs[multipliers_restaurants$`Species Category` == "Imports"] <-
imports$base_catch[imports$fips == n &
imports$`Economic Category` == "Restaurants"]
}
}
multipliers_restaurants = multipliers_restaurants %>%
dplyr::mutate(restaurant_markup = restaurant_inputs * markup) %>%
dplyr::mutate(
PI_Direct_Impact = `Personal Income Direct Impacts` * restaurant_markup,
PI_Indirect_Impact = `Personal Income Indirect Impacts` * `RPC RPC` *
restaurant_markup,
PI_Induced_Impact = `Personal Income Induced Impacts` * `RPC RPC` *
restaurant_markup,
PI_Total = PI_Direct_Impact + PI_Indirect_Impact + PI_Induced_Impact,
TV_Direct_Impact = `Total Value Direct Impacts` * restaurant_markup,
TV_Indirect_Impact = `Total Value Indirect Impacts` * `RPC RPC` *
restaurant_markup,
TV_Induced_Impact = `Total Value Induced Impacts` * `RPC RPC` *
restaurant_markup,
TV_Total = TV_Direct_Impact + TV_Indirect_Impact + TV_Induced_Impact,
O_Direct_Impact = `Output Direct Impacts` * restaurant_markup,
O_Indirect_Impact = `Output Indirect Impacts` * `RPC RPC` * restaurant_markup,
O_Induced_Impact = `Output Induced Impacts` * `RPC RPC` * restaurant_markup,
O_Total = O_Direct_Impact + O_Indirect_Impact + O_Induced_Impact,
E_Direct_Impact = `Employment Direct Impacts` * restaurant_markup * deflator,
E_Indirect_Impact = `Employment Indirect Impacts` * `RPC RPC` *
restaurant_markup * deflator,
E_Induced_Impact = `Employment Induced Impacts` * `RPC RPC` * restaurant_markup * deflator,
E_Total = E_Direct_Impact + E_Indirect_Impact + E_Induced_Impact
)
restaurants_output = multipliers_restaurants %>% dplyr::select(
fips,
`Economic Category`,
`Species Category`,
spec_no,
PI_Direct_Impact,
PI_Indirect_Impact,
PI_Induced_Impact,
PI_Total,
TV_Direct_Impact,
TV_Indirect_Impact,
TV_Induced_Impact,
TV_Total,
O_Direct_Impact,
O_Indirect_Impact,
O_Induced_Impact,
O_Total,
E_Direct_Impact,
E_Indirect_Impact,
E_Induced_Impact,
E_Total
)
################
# Final Output #
################
final_output = dplyr::bind_rows(
harvesters_output,
processors_output,
wholesalers_output,
grocers_output,
restaurants_output
)
final_output[is.na(final_output)] <- 0
return(final_output)
}
io_calculator(base_catch, imports)
base_catch2 = base_catch
imports2 = imports
io_calculator(base_catch2, imports2)
dir = getwd()
dir
dir = paste0(getwd(),"/")
dir
multipliers = read.csv(paste0(dir, "multipliers.csv"))
imports_states = read_csv(paste0(dir, "imports_states.csv"))
imports_states = read.csv(paste0(dir, "imports_states.csv"))
io_calculator(base_catch = base_catch, imports = imports, multipliers = multipliers, imports_states = imports_states)
multipliers
multipliers = readr::read_csv(paste0(dir, "multipliers.csv"))
imports_states = readr::read_csv(paste0(dir, "imports_states.csv"))
multipliers
io_calculator(base_catch = base_catch, imports = imports, multipliers = multipliers, imports_states = imports_states)
multipliers
View(multipliers)
`Species Category` == "Shrimp" ~ 1,
`Species Category` == "Crab" ~ 2,
`Species Category` == "Lobster" ~ 3,
`Species Category` == "East Coast Groundfish" ~ 4,
`Species Category` == "HMS" ~ 5,
`Species Category` == "Reef Fish" ~ 6,
`Species Category` == "West Coast Groundfish " ~ 7,
`Species Category` == "West Coast Whiting " ~ 8,
`Species Category` == "Halibut" ~ 9,
`Species Category` == "Menhaden and Industrial" ~ 10,
`Species Category` == "Salmon" ~ 11,
`Species Category` == "Sea Scallop" ~ 12,
`Species Category` == "Pelagic Herring and Mackerel" ~ 13,
`Species Category` == "Surf Clam and Ocean Quahog " ~ 14,
`Species Category` == "Other Trawl" ~ 15,
`Species Category` == "All Other Finfish" ~ 16,
`Species Category` == "All Other Shellfish  " ~ 17,
`Species Category` == "Freshwater " ~ 18,
`Species Category` == "Inshore and Miscellaneous" ~ 19,
`Species Category` == "Bait" ~ 20)) %>%
select(-`Species Category`)
base_catch = base_catch %>% dplyr::mutate(spec_no = dplyr::case_when(
`Species Category` == "Shrimp" ~ 1,
`Species Category` == "Crab" ~ 2,
`Species Category` == "Lobster" ~ 3,
`Species Category` == "East Coast Groundfish" ~ 4,
`Species Category` == "HMS" ~ 5,
`Species Category` == "Reef Fish" ~ 6,
`Species Category` == "West Coast Groundfish " ~ 7,
`Species Category` == "West Coast Whiting " ~ 8,
`Species Category` == "Halibut" ~ 9,
`Species Category` == "Menhaden and Industrial" ~ 10,
`Species Category` == "Salmon" ~ 11,
`Species Category` == "Sea Scallop" ~ 12,
`Species Category` == "Pelagic Herring and Mackerel" ~ 13,
`Species Category` == "Surf Clam and Ocean Quahog " ~ 14,
`Species Category` == "Other Trawl" ~ 15,
`Species Category` == "All Other Finfish" ~ 16,
`Species Category` == "All Other Shellfish  " ~ 17,
`Species Category` == "Freshwater " ~ 18,
`Species Category` == "Inshore and Miscellaneous" ~ 19,
`Species Category` == "Bait" ~ 20)) %>%
select(-`Species Category`)
`Species Category` == "Shrimp" ~ 1,
`Species Category` == "Crab" ~ 2,
`Species Category` == "Lobster" ~ 3,
`Species Category` == "East Coast Groundfish" ~ 4,
`Species Category` == "HMS" ~ 5,
`Species Category` == "Reef Fish" ~ 6,
`Species Category` == "West Coast Groundfish " ~ 7,
`Species Category` == "West Coast Whiting " ~ 8,
`Species Category` == "Halibut" ~ 9,
`Species Category` == "Menhaden and Industrial" ~ 10,
`Species Category` == "Salmon" ~ 11,
`Species Category` == "Sea Scallop" ~ 12,
`Species Category` == "Pelagic Herring and Mackerel" ~ 13,
`Species Category` == "Surf Clam and Ocean Quahog " ~ 14,
`Species Category` == "Other Trawl" ~ 15,
`Species Category` == "All Other Finfish" ~ 16,
`Species Category` == "All Other Shellfish  " ~ 17,
`Species Category` == "Freshwater " ~ 18,
`Species Category` == "Inshore and Miscellaneous" ~ 19,
`Species Category` == "Bait" ~ 20)) %>%
dplyr::select(-`Species Category`)
base_catch = base_catch %>% dplyr::mutate(spec_no = dplyr::case_when(
`Species Category` == "Shrimp" ~ 1,
`Species Category` == "Crab" ~ 2,
`Species Category` == "Lobster" ~ 3,
`Species Category` == "East Coast Groundfish" ~ 4,
`Species Category` == "HMS" ~ 5,
`Species Category` == "Reef Fish" ~ 6,
`Species Category` == "West Coast Groundfish " ~ 7,
`Species Category` == "West Coast Whiting " ~ 8,
`Species Category` == "Halibut" ~ 9,
`Species Category` == "Menhaden and Industrial" ~ 10,
`Species Category` == "Salmon" ~ 11,
`Species Category` == "Sea Scallop" ~ 12,
`Species Category` == "Pelagic Herring and Mackerel" ~ 13,
`Species Category` == "Surf Clam and Ocean Quahog " ~ 14,
`Species Category` == "Other Trawl" ~ 15,
`Species Category` == "All Other Finfish" ~ 16,
`Species Category` == "All Other Shellfish  " ~ 17,
`Species Category` == "Freshwater " ~ 18,
`Species Category` == "Inshore and Miscellaneous" ~ 19,
`Species Category` == "Bait" ~ 20)) %>%
dplyr::select(-`Species Category`)
io_calculator(base_catch = base_catch, imports = imports, multipliers = multipliers, imports_states = imports_states)
impacts <- io_calculator(base_catch = base_catch, imports = imports, multipliers = multipliers, imports_states = imports_states)
view(impacts)
utils::view(impacts)
tibble::view(impacts)
View(base_catch)
Comm.Catch.Spp.List
base_catch = io_classifier(commercial_data = commercial.data, year = 2017)
View(base_catch)
species_list = Comm.Catch.Spp.List
commercial_data = commercial.data
temp <- unique(commercial_data$TSN) %>% FishEconProdOutput::itis_reclassify(tsn = .,
categories = species_list)
tsn_id = as.data.frame(temp[1][[1]])
tsn_id
tsn_id = as.data.frame(temp[1][[1]])
View(tsn_id)
if (sum(tsn_id$category %in% c("Other", "Uncategorized"))>0) {
tsn_id<-tsn_id[!(tsn_id$category %in% c("Other", "Uncategorized")),
c("TSN", "category")]
}
View(tsn_id)
tsn_id$TSN<-as.numeric(as.character(tsn_id$TSN))
tsn_id
commercial.data.merged<-dplyr::left_join(x = commercial.data,
y = tsn_id,
by = "TSN")
View(commercial.data.merged)
commercial.data = read.csv(paste0(dir.data, "commercial.data.csv"))
temp <- unique(commercial_data$TSN) %>% FishEconProdOutput::itis_reclassify(tsn = .,
categories = species_list)
tsn_id = as.data.frame(temp[1][[1]])
if (sum(tsn_id$category %in% c("Other", "Uncategorized"))>0) {
tsn_id<-tsn_id[!(tsn_id$category %in% c("Other", "Uncategorized")),
c("TSN", "category")]
}
tsn_id$TSN<-as.numeric(as.character(tsn_id$TSN))
commercial.data.merged<-dplyr::left_join(x = commercial.data,
y = tsn_id,
by = "TSN")
commercial.data = commercial.data.merged %>%
dplyr::filter(DOLLARS>0 & !is.na(DOLLARS) & !is.na(valid)) %>%
dplyr::select(State, year, DOLLARS, fips, Region, category) %>%
dplyr::group_by(Region, State, fips, year, category) %>%
dplyr::summarize(dollars = sum(DOLLARS))
if(!is.na(year)){
commercial.data = commercial.data %>%
dplyr::rename(`Species Category` = category, base_catch = dollars, Year = year) %>%
dplyr::filter(Year == year)
}
View(commercial.data)
View(commercial.data.merged)
View(tsn_id)
View(commercial.data)
commercial.data = read.csv(paste0(dir.data, "commercial.data.csv"))
tsn_id
tsn_id %>% dplyr::filter(TSN == 163344)
temp <- unique(commercial_data$TSN) %>% FishEconProdOutput::itis_reclassify(tsn = .,
categories = species_list,
missing_name = "Uncategorized")
tsn_id = as.data.frame(temp[1][[1]])
tsn_id %>% dplyr::filter(TSN == 163344)
commercial.data %>% dplyr::filter(TSN == 163344)
